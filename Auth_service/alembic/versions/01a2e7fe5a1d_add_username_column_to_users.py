"""Add username column to users

Revision ID: 01a2e7fe5a1d
Revises: 0e93ad5f3a09
Create Date: 2024-11-20 09:32:32.170395

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '01a2e7fe5a1d'
down_revision: Union[str, None] = '0e93ad5f3a09'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('username', sa.String(length=15), nullable=False))
    op.add_column('users', sa.Column('email', sa.String(length=55), nullable=False))
    op.add_column('users', sa.Column('hashed_password', sa.String(), nullable=False))
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users', 'is_super_user',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.create_unique_constraint(op.f('uq_users_username'), 'users', ['username'])
    op.drop_column('users', 'nickname')
    op.drop_column('users', 'password')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('password', sa.VARCHAR(length=200), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('nickname', sa.VARCHAR(length=15), autoincrement=False, nullable=False))
    op.drop_constraint(op.f('uq_users_username'), 'users', type_='unique')
    op.alter_column('users', 'is_super_user',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_column('users', 'hashed_password')
    op.drop_column('users', 'email')
    op.drop_column('users', 'username')
    # ### end Alembic commands ###
